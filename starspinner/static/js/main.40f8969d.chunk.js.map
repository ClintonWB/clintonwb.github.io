{"version":3,"sources":["StarCanvas.js","AsterismSelector.js","App.js","serviceWorker.js","index.js"],"names":["cube","stars","x","y","z","lines","StarCanvas","props","star_data","starData","forEach","initializeStarData","state","show_lines","show_stars","line","p1","this","p2","ctx","beginPath","strokeStyle","moveTo","canvas","lineTo","closePath","stroke","star","size","width","drawImage","starSVG","clearRect","height","updateStarData","drawLine","drawStar","rotations","window","requestAnimationFrame","drawCanvas","bind","Math","cos","sin","evt","touches","startX","clientX","startY","clientY","mouseX","mouseY","moving","setState","document","getElementById","getContext","translate","started","Date","addEventListener","startMouseData","moveMouse","endMouseData","id","src","alt","onClick","toggleLines","toggleStars","className","name","Object","assign","Component","AsterismSelector","asterism_surd","target","value","surd_dict","opt_groups","keys","Asterisms","map","opt_group","options","category","push","surd","asterism","var","key","label","defaultValue","onChange","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","basename","path","component","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.40f8969d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './StarCanvas.css';\r\n\r\nvar cube = {\r\n  stars:[\r\n    {x:-50,y:-50,z:-50},\r\n    {x:-50,y:-50,z:50},\r\n    {x:-50,y:50,z:-50},\r\n    {x:-50,y:50,z:50},\r\n    {x:50,y:-50,z:-50},\r\n    {x:50,y:-50,z:50},\r\n    {x:50,y:50,z:-50},\r\n    {x:50,y:50,z:50}\r\n  ],\r\n  lines:[\r\n    [0,1],\r\n    [0,2],\r\n    [0,4],\r\n    [1,3],\r\n    [1,5],\r\n    [2,3],\r\n    [2,6],\r\n    [3,7],\r\n    [4,5],\r\n    [4,6],\r\n    [5,7],\r\n    [6,7]\r\n  ]\r\n}\r\n\r\nclass StarCanvas extends Component {\r\n\r\n  constructor(props) {\r\n        super(props);\r\n        var star_data = props.starData;\r\n        star_data.stars.forEach(StarCanvas.initializeStarData, this);\r\n        this.state = {\r\n          star_data: star_data || cube,\r\n          show_lines: 0,\r\n          show_stars: 1,\r\n        }\r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n    if (state.star_data.name === props.starData.name){\r\n      return false;\r\n    }\r\n    var star_data = props.starData;\r\n    star_data.stars.forEach(StarCanvas.initializeStarData, this);\r\n    return {star_data: star_data || cube};\r\n  }\r\n\r\n  drawLine(line){\r\n    var p1 = this.state.star_data.stars[line[0]];\r\n    var p2 = this.state.star_data.stars[line[1]];\r\n    this.ctx.beginPath();\r\n    this.ctx.strokeStyle = \"#BBBBBB\";\r\n    this.ctx.moveTo(p1.canvas.x,p1.canvas.y)\r\n    this.ctx.lineTo(p2.canvas.x,p2.canvas.y)\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawStar(star){\r\n    var size = (star.canvas.z)/this.canvas.width*20+20\r\n    this.ctx.drawImage(this.starSVG,star.canvas.x-size/2,star.canvas.y-size/2,size,size);\r\n  }\r\n\r\n  drawCanvas(){\r\n    this.ctx.clearRect(-this.canvas.width/2,-this.canvas.height/2,this.canvas.width, this.canvas.height);\r\n    this.state.star_data.stars.forEach(this.updateStarData, this);\r\n    if(this.state.show_lines){\r\n        this.state.star_data.lines.forEach(this.drawLine,this);\r\n    }\r\n    if(this.state.show_stars){\r\n      this.state.star_data.stars.forEach(this.drawStar,this);\r\n    }\r\n    this.rotations = {x:0,y:0};\r\n    window.requestAnimationFrame(this.drawCanvas.bind(this));\r\n  }\r\n\r\n  updateStarData(star){\r\n    var [x,y,z] = [star.canvas.x, star.canvas.y, star.canvas.z];\r\n    [x,z] = [Math.cos(this.rotations.x)*x + Math.sin(this.rotations.x)*z,\r\n             -Math.sin(this.rotations.x)*x + Math.cos(this.rotations.x)*z];\r\n    [y,z] = [Math.cos(this.rotations.y)*y + Math.sin(this.rotations.y)*z,\r\n             -Math.sin(this.rotations.y)*y + Math.cos(this.rotations.y)*z];\r\n    star.canvas.x = x;\r\n    star.canvas.y = y;\r\n    star.canvas.z = z;\r\n  }\r\n\r\n  startMouseData(evt){\r\n    if(evt.touches){\r\n      evt = evt.touches[0];\r\n    }\r\n    this.startX = evt.clientX;\r\n    this.startY = evt.clientY;\r\n    this.mouseX = evt.clientX;\r\n    this.mouseY = evt.clientY;\r\n    this.moving = true;\r\n  }\r\n  moveMouse(evt){\r\n    if(evt.touches){\r\n      evt = evt.touches[0];\r\n    }\r\n    if(this.moving){\r\n      this.rotations = {x:(evt.clientX - this.mouseX)/40,\r\n                        y:(evt.clientY - this.mouseY)/40}\r\n      this.mouseX = evt.clientX;\r\n      this.mouseY = evt.clientY;\r\n    }\r\n  }\r\n  endMouseData(evt){\r\n      this.moving = false;\r\n  }\r\n\r\n  static initializeStarData(star){\r\n      star.canvas = Object.assign({},star);\r\n  }\r\n\r\n  toggleLines(evt){\r\n    this.setState({show_lines: 1-this.state.show_lines});\r\n  }\r\n  toggleStars(evt){\r\n    this.setState({show_stars: 1-this.state.show_stars});\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.canvas = document.getElementById(\"star-canvas\");\r\n    this.starSVG = document.getElementById(\"starsvg\");\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.rotations = {x:0,y:0,z:0};\r\n    this.ctx.translate(this.canvas.width/2,this.canvas.height/2);\r\n    this.started = new Date();\r\n    window.addEventListener(\"touchstart\",this.startMouseData.bind(this));\r\n    window.addEventListener(\"mousedown\",this.startMouseData.bind(this));\r\n    window.addEventListener(\"touchmove\",this.moveMouse.bind(this));\r\n    window.addEventListener(\"mousemove\",this.moveMouse.bind(this));\r\n    window.addEventListener(\"touchend\",this.endMouseData.bind(this));\r\n    window.addEventListener(\"mouseup\",this.endMouseData.bind(this));\r\n    window.requestAnimationFrame(this.drawCanvas.bind(this));\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n      <img id=\"starsvg\" src=\"svgstar.svg\" alt=\"star\"></img>\r\n      <button onClick={this.toggleLines.bind(this)}>{this.state.show_lines? \"Hide\":\"Show\"} Lines</button>\r\n      <button onClick={this.toggleStars.bind(this)}>{this.state.show_stars? \"Hide\":\"Show\"} Stars</button>\r\n      <div className=\"star-canvas-container\">\r\n        <canvas id=\"star-canvas\" width=\"500\" height=\"500\">\r\n        </canvas>\r\n      </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default StarCanvas;\r\n","import React, {Component} from 'react';\r\nimport StarCanvas from './StarCanvas.js';\r\nimport Asterisms from './asterisms.json';\r\n\r\nclass AsterismSelector extends Component {\r\n\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          asterism_surd: \"BDr\",\r\n        }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n  }\r\n\r\n  onChange(evt){\r\n    this.setState({asterism_surd:evt.target.value})\r\n  }\r\n\r\n  render(){\r\n    var surd_dict = {};\r\n    var opt_groups = Object.keys(Asterisms).map(function(opt_group){\r\n      var options = [];\r\n      Object.keys(Asterisms[opt_group]).forEach(function(category){\r\n        options.push(...Object.keys(Asterisms[opt_group][category])\r\n          .map(function(surd){\r\n            var asterism = Asterisms[opt_group][category][surd];\r\n            surd_dict[surd] = asterism;\r\n            var name = asterism[\"name\"];\r\n            return <option value={surd} var={surd} key={surd}>{name}</option>;\r\n          })\r\n      )})\r\n\r\n      return <optgroup label={opt_group} key={opt_group}>\r\n              {options}\r\n              </optgroup>\r\n      });\r\n\r\n      return (\r\n        <div>\r\n        <select defaultValue={this.state.asterism_surd} onChange={this.onChange.bind(this)}>\r\n        {opt_groups}\r\n        </select>\r\n        <StarCanvas starData={surd_dict[this.state.asterism_surd]} />\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default AsterismSelector;\r\n","import React from 'react';\nimport './App.css';\nimport AsterismSelector from './AsterismSelector.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Star Spinner\n      </header>\n      <AsterismSelector/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,Route} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <BrowserRouter basename={'/starspinner'}>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}